/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ovh-api/apis/iploadbalancing/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HttpFarmLister helps list HttpFarms.
// All objects returned here must be treated as read-only.
type HttpFarmLister interface {
	// List lists all HttpFarms in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HttpFarm, err error)
	// HttpFarms returns an object that can list and get HttpFarms.
	HttpFarms(namespace string) HttpFarmNamespaceLister
	HttpFarmListerExpansion
}

// httpFarmLister implements the HttpFarmLister interface.
type httpFarmLister struct {
	indexer cache.Indexer
}

// NewHttpFarmLister returns a new HttpFarmLister.
func NewHttpFarmLister(indexer cache.Indexer) HttpFarmLister {
	return &httpFarmLister{indexer: indexer}
}

// List lists all HttpFarms in the indexer.
func (s *httpFarmLister) List(selector labels.Selector) (ret []*v1alpha1.HttpFarm, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HttpFarm))
	})
	return ret, err
}

// HttpFarms returns an object that can list and get HttpFarms.
func (s *httpFarmLister) HttpFarms(namespace string) HttpFarmNamespaceLister {
	return httpFarmNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HttpFarmNamespaceLister helps list and get HttpFarms.
// All objects returned here must be treated as read-only.
type HttpFarmNamespaceLister interface {
	// List lists all HttpFarms in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HttpFarm, err error)
	// Get retrieves the HttpFarm from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HttpFarm, error)
	HttpFarmNamespaceListerExpansion
}

// httpFarmNamespaceLister implements the HttpFarmNamespaceLister
// interface.
type httpFarmNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HttpFarms in the indexer for a given namespace.
func (s httpFarmNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HttpFarm, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HttpFarm))
	})
	return ret, err
}

// Get retrieves the HttpFarm from the indexer for a given namespace and name.
func (s httpFarmNamespaceLister) Get(name string) (*v1alpha1.HttpFarm, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("httpfarm"), name)
	}
	return obj.(*v1alpha1.HttpFarm), nil
}
