/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ovh-api/apis/domain/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ZoneRedirectionLister helps list ZoneRedirections.
// All objects returned here must be treated as read-only.
type ZoneRedirectionLister interface {
	// List lists all ZoneRedirections in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ZoneRedirection, err error)
	// ZoneRedirections returns an object that can list and get ZoneRedirections.
	ZoneRedirections(namespace string) ZoneRedirectionNamespaceLister
	ZoneRedirectionListerExpansion
}

// zoneRedirectionLister implements the ZoneRedirectionLister interface.
type zoneRedirectionLister struct {
	indexer cache.Indexer
}

// NewZoneRedirectionLister returns a new ZoneRedirectionLister.
func NewZoneRedirectionLister(indexer cache.Indexer) ZoneRedirectionLister {
	return &zoneRedirectionLister{indexer: indexer}
}

// List lists all ZoneRedirections in the indexer.
func (s *zoneRedirectionLister) List(selector labels.Selector) (ret []*v1alpha1.ZoneRedirection, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ZoneRedirection))
	})
	return ret, err
}

// ZoneRedirections returns an object that can list and get ZoneRedirections.
func (s *zoneRedirectionLister) ZoneRedirections(namespace string) ZoneRedirectionNamespaceLister {
	return zoneRedirectionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ZoneRedirectionNamespaceLister helps list and get ZoneRedirections.
// All objects returned here must be treated as read-only.
type ZoneRedirectionNamespaceLister interface {
	// List lists all ZoneRedirections in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ZoneRedirection, err error)
	// Get retrieves the ZoneRedirection from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ZoneRedirection, error)
	ZoneRedirectionNamespaceListerExpansion
}

// zoneRedirectionNamespaceLister implements the ZoneRedirectionNamespaceLister
// interface.
type zoneRedirectionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ZoneRedirections in the indexer for a given namespace.
func (s zoneRedirectionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ZoneRedirection, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ZoneRedirection))
	})
	return ret, err
}

// Get retrieves the ZoneRedirection from the indexer for a given namespace and name.
func (s zoneRedirectionNamespaceLister) Get(name string) (*v1alpha1.ZoneRedirection, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("zoneredirection"), name)
	}
	return obj.(*v1alpha1.ZoneRedirection), nil
}
