/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ovh-api/apis/dbaas/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LogsInputLister helps list LogsInputs.
// All objects returned here must be treated as read-only.
type LogsInputLister interface {
	// List lists all LogsInputs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LogsInput, err error)
	// LogsInputs returns an object that can list and get LogsInputs.
	LogsInputs(namespace string) LogsInputNamespaceLister
	LogsInputListerExpansion
}

// logsInputLister implements the LogsInputLister interface.
type logsInputLister struct {
	indexer cache.Indexer
}

// NewLogsInputLister returns a new LogsInputLister.
func NewLogsInputLister(indexer cache.Indexer) LogsInputLister {
	return &logsInputLister{indexer: indexer}
}

// List lists all LogsInputs in the indexer.
func (s *logsInputLister) List(selector labels.Selector) (ret []*v1alpha1.LogsInput, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogsInput))
	})
	return ret, err
}

// LogsInputs returns an object that can list and get LogsInputs.
func (s *logsInputLister) LogsInputs(namespace string) LogsInputNamespaceLister {
	return logsInputNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LogsInputNamespaceLister helps list and get LogsInputs.
// All objects returned here must be treated as read-only.
type LogsInputNamespaceLister interface {
	// List lists all LogsInputs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LogsInput, err error)
	// Get retrieves the LogsInput from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.LogsInput, error)
	LogsInputNamespaceListerExpansion
}

// logsInputNamespaceLister implements the LogsInputNamespaceLister
// interface.
type logsInputNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LogsInputs in the indexer for a given namespace.
func (s logsInputNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LogsInput, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogsInput))
	})
	return ret, err
}

// Get retrieves the LogsInput from the indexer for a given namespace and name.
func (s logsInputNamespaceLister) Get(name string) (*v1alpha1.LogsInput, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("logsinput"), name)
	}
	return obj.(*v1alpha1.LogsInput), nil
}
