/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ovh-api/apis/me/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InstallationTemplatePartitionSchemeHardwareRaidLister helps list InstallationTemplatePartitionSchemeHardwareRaids.
// All objects returned here must be treated as read-only.
type InstallationTemplatePartitionSchemeHardwareRaidLister interface {
	// List lists all InstallationTemplatePartitionSchemeHardwareRaids in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid, err error)
	// InstallationTemplatePartitionSchemeHardwareRaids returns an object that can list and get InstallationTemplatePartitionSchemeHardwareRaids.
	InstallationTemplatePartitionSchemeHardwareRaids(namespace string) InstallationTemplatePartitionSchemeHardwareRaidNamespaceLister
	InstallationTemplatePartitionSchemeHardwareRaidListerExpansion
}

// installationTemplatePartitionSchemeHardwareRaidLister implements the InstallationTemplatePartitionSchemeHardwareRaidLister interface.
type installationTemplatePartitionSchemeHardwareRaidLister struct {
	indexer cache.Indexer
}

// NewInstallationTemplatePartitionSchemeHardwareRaidLister returns a new InstallationTemplatePartitionSchemeHardwareRaidLister.
func NewInstallationTemplatePartitionSchemeHardwareRaidLister(indexer cache.Indexer) InstallationTemplatePartitionSchemeHardwareRaidLister {
	return &installationTemplatePartitionSchemeHardwareRaidLister{indexer: indexer}
}

// List lists all InstallationTemplatePartitionSchemeHardwareRaids in the indexer.
func (s *installationTemplatePartitionSchemeHardwareRaidLister) List(selector labels.Selector) (ret []*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid))
	})
	return ret, err
}

// InstallationTemplatePartitionSchemeHardwareRaids returns an object that can list and get InstallationTemplatePartitionSchemeHardwareRaids.
func (s *installationTemplatePartitionSchemeHardwareRaidLister) InstallationTemplatePartitionSchemeHardwareRaids(namespace string) InstallationTemplatePartitionSchemeHardwareRaidNamespaceLister {
	return installationTemplatePartitionSchemeHardwareRaidNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstallationTemplatePartitionSchemeHardwareRaidNamespaceLister helps list and get InstallationTemplatePartitionSchemeHardwareRaids.
// All objects returned here must be treated as read-only.
type InstallationTemplatePartitionSchemeHardwareRaidNamespaceLister interface {
	// List lists all InstallationTemplatePartitionSchemeHardwareRaids in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid, err error)
	// Get retrieves the InstallationTemplatePartitionSchemeHardwareRaid from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid, error)
	InstallationTemplatePartitionSchemeHardwareRaidNamespaceListerExpansion
}

// installationTemplatePartitionSchemeHardwareRaidNamespaceLister implements the InstallationTemplatePartitionSchemeHardwareRaidNamespaceLister
// interface.
type installationTemplatePartitionSchemeHardwareRaidNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstallationTemplatePartitionSchemeHardwareRaids in the indexer for a given namespace.
func (s installationTemplatePartitionSchemeHardwareRaidNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid))
	})
	return ret, err
}

// Get retrieves the InstallationTemplatePartitionSchemeHardwareRaid from the indexer for a given namespace and name.
func (s installationTemplatePartitionSchemeHardwareRaidNamespaceLister) Get(name string) (*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("installationtemplatepartitionschemehardwareraid"), name)
	}
	return obj.(*v1alpha1.InstallationTemplatePartitionSchemeHardwareRaid), nil
}
