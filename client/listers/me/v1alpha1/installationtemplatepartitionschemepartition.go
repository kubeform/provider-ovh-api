/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-ovh-api/apis/me/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InstallationTemplatePartitionSchemePartitionLister helps list InstallationTemplatePartitionSchemePartitions.
// All objects returned here must be treated as read-only.
type InstallationTemplatePartitionSchemePartitionLister interface {
	// List lists all InstallationTemplatePartitionSchemePartitions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstallationTemplatePartitionSchemePartition, err error)
	// InstallationTemplatePartitionSchemePartitions returns an object that can list and get InstallationTemplatePartitionSchemePartitions.
	InstallationTemplatePartitionSchemePartitions(namespace string) InstallationTemplatePartitionSchemePartitionNamespaceLister
	InstallationTemplatePartitionSchemePartitionListerExpansion
}

// installationTemplatePartitionSchemePartitionLister implements the InstallationTemplatePartitionSchemePartitionLister interface.
type installationTemplatePartitionSchemePartitionLister struct {
	indexer cache.Indexer
}

// NewInstallationTemplatePartitionSchemePartitionLister returns a new InstallationTemplatePartitionSchemePartitionLister.
func NewInstallationTemplatePartitionSchemePartitionLister(indexer cache.Indexer) InstallationTemplatePartitionSchemePartitionLister {
	return &installationTemplatePartitionSchemePartitionLister{indexer: indexer}
}

// List lists all InstallationTemplatePartitionSchemePartitions in the indexer.
func (s *installationTemplatePartitionSchemePartitionLister) List(selector labels.Selector) (ret []*v1alpha1.InstallationTemplatePartitionSchemePartition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstallationTemplatePartitionSchemePartition))
	})
	return ret, err
}

// InstallationTemplatePartitionSchemePartitions returns an object that can list and get InstallationTemplatePartitionSchemePartitions.
func (s *installationTemplatePartitionSchemePartitionLister) InstallationTemplatePartitionSchemePartitions(namespace string) InstallationTemplatePartitionSchemePartitionNamespaceLister {
	return installationTemplatePartitionSchemePartitionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstallationTemplatePartitionSchemePartitionNamespaceLister helps list and get InstallationTemplatePartitionSchemePartitions.
// All objects returned here must be treated as read-only.
type InstallationTemplatePartitionSchemePartitionNamespaceLister interface {
	// List lists all InstallationTemplatePartitionSchemePartitions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstallationTemplatePartitionSchemePartition, err error)
	// Get retrieves the InstallationTemplatePartitionSchemePartition from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InstallationTemplatePartitionSchemePartition, error)
	InstallationTemplatePartitionSchemePartitionNamespaceListerExpansion
}

// installationTemplatePartitionSchemePartitionNamespaceLister implements the InstallationTemplatePartitionSchemePartitionNamespaceLister
// interface.
type installationTemplatePartitionSchemePartitionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstallationTemplatePartitionSchemePartitions in the indexer for a given namespace.
func (s installationTemplatePartitionSchemePartitionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InstallationTemplatePartitionSchemePartition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstallationTemplatePartitionSchemePartition))
	})
	return ret, err
}

// Get retrieves the InstallationTemplatePartitionSchemePartition from the indexer for a given namespace and name.
func (s installationTemplatePartitionSchemePartitionNamespaceLister) Get(name string) (*v1alpha1.InstallationTemplatePartitionSchemePartition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("installationtemplatepartitionschemepartition"), name)
	}
	return obj.(*v1alpha1.InstallationTemplatePartitionSchemePartition), nil
}
